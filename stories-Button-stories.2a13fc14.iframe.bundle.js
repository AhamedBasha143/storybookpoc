"use strict";(self.webpackChunkmy_storybook_new=self.webpackChunkmy_storybook_new||[]).push([[9791],{"./src/stories/Button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IconLeftButton:()=>IconLeftButton,IconRightButton:()=>IconRightButton,RoundedLargeButton:()=>RoundedLargeButton,RoundedPrimaryButton:()=>RoundedPrimaryButton,RoundedSmallButton:()=>RoundedSmallButton,SquaredLargeButton:()=>SquaredLargeButton,SquaredPrimaryButton:()=>SquaredPrimaryButton,SquaredSmallButton:()=>SquaredSmallButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_Button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/stories/Button.jsx"),react_icons_lu__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react-icons/lu/index.mjs"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Button",component:_Button__WEBPACK_IMPORTED_MODULE_1__.$,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{backgroundColor:{control:"color"}},args:{onClick:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_0__.fn)()}},RoundedPrimaryButton={args:{primary:!0,label:"Rounded Border Button"}},SquaredPrimaryButton={args:{label:"Button",primary:!0,noBorderRadius:!0}},SquaredLargeButton={args:{size:"large",label:"Large Button",noBorderRadius:!0}},SquaredSmallButton={args:{size:"small",label:"Small Button",noBorderRadius:!0}},RoundedLargeButton={args:{size:"large",label:"Large Button"}},RoundedSmallButton={args:{size:"small",label:"Small Button"}},IconLeftButton={args:{primary:!0,label:"Button",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_icons_lu__WEBPACK_IMPORTED_MODULE_3__.qB2,{}),iconPosition:"left"}},IconRightButton={args:{primary:!0,label:"Button",icon:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(react_icons_lu__WEBPACK_IMPORTED_MODULE_3__.qB2,{}),iconPosition:"right"}};RoundedPrimaryButton.parameters={docs:{source:{code:'import React, { useState } from "react";\nimport "./button.css";\nimport PropTypes from "prop-types";\nexport const Button = ({\n  primary,\n  backgroundColor,\n  size,\n  label,\n  noBorderRadius,\n  icon,\n  iconPosition,\n  ...props\n}) => {\n  const [isClicked, setIsClicked] = useState(false);\n  const mode = primary\n    ? "storybook-button--primary"\n    : "storybook-button--secondary";\n  const borderRadiusClass = noBorderRadius\n    ? "storybook-button--no-border-radius"\n    : "storybook-button--border-radius";\n\n  const handleClick = () => {\n    setIsClicked(!isClicked);\n  };\n\n  return (\n    <button\n      type="button"\n      className={[\n        "storybook-button",\n        \'storybook-button--{size}\',\n        mode,\n        borderRadiusClass,\n      ].join(" ")}\n      style={backgroundColor && { backgroundColor }}\n      onClick={(e) => {\n        handleClick();\n        if (props.onClick) props.onClick(e);\n      }}\n      {...props}\n    >\n      {icon && iconPosition === "left" && (\n        <span className="storybook-button__icon_right">{icon}</span>\n      )}\n      {label}\n      {icon && iconPosition === "right" && (\n        <span className="storybook-button__icon_left">{icon}</span>\n      )}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  primary: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  size: PropTypes.oneOf(["small", "medium", "large"]),\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n  noBorderRadius: PropTypes.bool,\n  icon: PropTypes.node,\n  iconPosition: PropTypes.oneOf(["left", "right"]),\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: "medium",\n  onClick: undefined,\n  noBorderRadius: false,\n  icon: null,\n  iconPosition: "left",\n};\n'}}};const __namedExportsOrder=["RoundedPrimaryButton","SquaredPrimaryButton","SquaredLargeButton","SquaredSmallButton","RoundedLargeButton","RoundedSmallButton","IconLeftButton","IconRightButton"];RoundedPrimaryButton.parameters={...RoundedPrimaryButton.parameters,docs:{...RoundedPrimaryButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    primary: true,\n    label: 'Rounded Border Button'\n  }\n}",...RoundedPrimaryButton.parameters?.docs?.source}}},SquaredPrimaryButton.parameters={...SquaredPrimaryButton.parameters,docs:{...SquaredPrimaryButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    label: 'Button',\n    primary: true,\n    noBorderRadius: true\n  }\n}",...SquaredPrimaryButton.parameters?.docs?.source}}},SquaredLargeButton.parameters={...SquaredLargeButton.parameters,docs:{...SquaredLargeButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'large',\n    label: 'Large Button',\n    noBorderRadius: true\n  }\n}",...SquaredLargeButton.parameters?.docs?.source}}},SquaredSmallButton.parameters={...SquaredSmallButton.parameters,docs:{...SquaredSmallButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'small',\n    label: 'Small Button',\n    noBorderRadius: true\n  }\n}",...SquaredSmallButton.parameters?.docs?.source}}},RoundedLargeButton.parameters={...RoundedLargeButton.parameters,docs:{...RoundedLargeButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'large',\n    label: 'Large Button'\n  }\n}",...RoundedLargeButton.parameters?.docs?.source}}},RoundedSmallButton.parameters={...RoundedSmallButton.parameters,docs:{...RoundedSmallButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    size: 'small',\n    label: 'Small Button'\n  }\n}",...RoundedSmallButton.parameters?.docs?.source}}},IconLeftButton.parameters={...IconLeftButton.parameters,docs:{...IconLeftButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    primary: true,\n    label: 'Button',\n    icon: <LuSendHorizonal />,\n    iconPosition: 'left'\n  }\n}",...IconLeftButton.parameters?.docs?.source}}},IconRightButton.parameters={...IconRightButton.parameters,docs:{...IconRightButton.parameters?.docs,source:{originalSource:"{\n  args: {\n    primary: true,\n    label: 'Button',\n    icon: <LuSendHorizonal />,\n    iconPosition: 'right'\n  }\n}",...IconRightButton.parameters?.docs?.source}}}},"./src/stories/Button.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var react=__webpack_require__("./node_modules/react/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=_ref=>{let{primary,backgroundColor,size,label,noBorderRadius,icon,iconPosition,...props}=_ref;const[isClicked,setIsClicked]=(0,react.useState)(!1),mode=primary?"storybook-button--primary":"storybook-button--secondary",borderRadiusClass=noBorderRadius?"storybook-button--no-border-radius":"storybook-button--border-radius";return(0,jsx_runtime.jsxs)("button",{type:"button",className:["storybook-button",`storybook-button--${size}`,mode,borderRadiusClass].join(" "),style:backgroundColor&&{backgroundColor},onClick:e=>{setIsClicked(!isClicked),props.onClick&&props.onClick(e)},...props,children:[icon&&"left"===iconPosition&&(0,jsx_runtime.jsx)("span",{className:"storybook-button__icon_right",children:icon}),label,icon&&"right"===iconPosition&&(0,jsx_runtime.jsx)("span",{className:"storybook-button__icon_left",children:icon})]})};Button.defaultProps={backgroundColor:null,primary:!1,size:"medium",onClick:void 0,noBorderRadius:!1,icon:null,iconPosition:"left"},Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{backgroundColor:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"string"},required:!1},primary:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},size:{defaultValue:{value:'"medium"',computed:!1},description:"",type:{name:"enum",value:[{value:'"small"',computed:!1},{value:'"medium"',computed:!1},{value:'"large"',computed:!1}]},required:!1},onClick:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"func"},required:!1},noBorderRadius:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},icon:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"node"},required:!1},iconPosition:{defaultValue:{value:'"left"',computed:!1},description:"",type:{name:"enum",value:[{value:'"left"',computed:!1},{value:'"right"',computed:!1}]},required:!1},label:{description:"",type:{name:"string"},required:!0}}}}}]);